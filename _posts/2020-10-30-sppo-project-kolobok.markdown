---
layout: post
title: "СППО. Практические работы по Git"
---


```bash
# История работы над проектом `kolobok`.
# Действующие лица:
# * Антон -- руководитель проекта;
# * Олег -- специалист по биографиям;
# * Василий -- знаток компьютерных технологий;
# * Ольга -- сценарист острых сюжетов;
# * Борис -- новичок в отрасли.
rm -rf kolobok
mkdir kolobok && cd kolobok
mkdir Anton Oleg Vasilij Olga Boris

# Создадим git-репозиторий, собирающий результаты над проектом
# со всех участников. Назовем его далее удаленным репозиторием.
# Репозиторий создается флагом `--bare`, означающем, что он
# будет "голым". Голый репозиторий хранит только историю изменений, и не
# содержит рабочего каталога. Общепризнано именовать такие репозитории
# именами, заканчивающими на ".git".
git init --bare kolobok.git
# Обозначим переменной `KolobokRepo` путь к свежесозданному удаленному
# репозиторию. Команда `pwd` возвращает путь к текущему каталогу.
KolobokRepo=$(pwd)/kolobok.git


# Антон распределяет работу по сотрудникам.
cd Anton
# Он склонировал репозиторий и ...
git clone $KolobokRepo .
# ... подготовил файл `index.html`, который далее объединит в себе работу
# остальных участников проекта.
echo "<!doctype html>
<html lang="ru">
  <head>
    <meta charset="utf-8">
    <title>Simple document</title>
  </head>

  <body>
  </body>
</hmtl>" >> index.html
# Он добавил в репозиторий первый коммит:
git add index.html
git commit -m "Добавлен файл index.html"
# Антон открыл файл "index.html" в браузере и заметил, что заголовок документа
# не соответствует проекту. Он внес изменения -- заменил строку "Simple document"
# на "Kolobok" ...
sed -i "s/Simple document/Kolobok/" index.html
# ... и зафиксировал изменение в репозитории:
git commit -a -m "Другой заголовок документа"
# По техзаданию было известно о 4 встречах Колобка со зверями.
# И еще описание детства Колобка. Поэтому Антон добавил 5 файлов.
# С каждым файлом мог работать один сотрудник, не пересекаясь с другими.
# Декомпозиция работы очень важна, чтобы далее упростить объединение результатов.
touch kolobok_childhood.html
touch meet_the_hare.html
touch meet_the_wolf.html
touch meet_the_bear.html
touch meet_the_fox.html
# Все изменения он сопроводил коммитом:
git add *.html
git commit -m "Story plane"
# Антон отправил данные в удаленный репозиторий:
git push
# и передал эстафету своим сотрудниками
# Олегу - описание детства колобка;
# Ольге - встречу колобка со зверями;
# Василию - компоновку истории.


# За работу взялся Олег.
cd ../Oleg
# Он склонировал репозиторий:
git clone $KolobokRepo .
# создал ветку `childhood`:
git branch childhood
# переключился на эту ветку:
git checkout childhood
# и внес изменения в файл `kolobok_childhood.html`:
echo "
Жили-были старик со старухой.
Вот и говорит старик старухе:
— Поди-ка, старуха, по коробу поскреби, по сусеку помети, не наскребешь ли муки на колобок.
Взяла старуха крылышко, по коробу поскребла, по сусеку помела и наскребла муки горсти две.
Замесила муку на сметане, состряпала колобок, изжарила в масле и на окошко студить положила.
" >> kolobok_childhood.html
# Свою работу он зафиксировал в истории:
git add kolobok_childhood.html
git status
git commit -m "Появление колобка"

# На следующий день он добавил о побеге Колобка:
echo "
Колобок полежал, полежал, взял да и покатился — с окна на лавку, с лавки на пол, пó полу к двери, прыг через порог — да в сени, из сеней на крыльцо, с крыльца на двор, со двора за ворота, дальше и дальше.
" >> kolobok_childhood.html
# И зафиксировал изменения:
git add kolobok_childhood.html
git commit -m "Детство колобка"
# Пришло время внести изменения в удаленный репозиторий.
# Антон требовал результатов работы.
# Олег забрал изменения из удаленного репозитория:
git fetch
# Посмотрел, что там нового:
git log --oneline --decorate --all --graph
# Ничего нового не обнаружил.
# Нужно внести изменения из ветки `childhood` в ветку `master`.
# Олег переключается на ветку `master`:
git checkout master
# и слил в нее ветку `childhood`:
git merge childhood
# Изменения отправил в удаленный репозиторий:
git push


# В дело вступает программист Василий.
cd ../Vasilij
# Он склонировал репозиторий с изменениями Олега к себе:
git clone $KolobokRepo .
# Тут же создал ветку 'html' и переключился на нее:
git checkout -b html
# При беглом осмотре файла `index.html` он нашел опечатку в теге html.
# Исправил опечатку:
sed -i "s/hmtl>/html>/" index.html
# Посмотрел на внесенные изменения командой:
git diff index.html
# Поняв, что все верно сделал, закоммитил свою работу:
git commit -a -m "Опечатка в закрывающемся теге html"
# Перед Василием поставлена задача -- добавить в файл `index.html` содержимое
# из других файлов. Поиск показал, что задачу можно решить через модуль jQuery.
# Пример решения задачи был на сайте stackoverflow.com.
sed -i '/<title>/ a <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"> \
</script>                                           \
<script>                                            \
  $(function(){                                     \
    $("#childhood").load("kolobok_childhood.html"); \
  }                                                 \
</script>' index.html
sed -i '/<body>/ a <div id="childhood"></div>' index.html
# Но такое решение из stackoverflow не хотело давать результата, как бы не бился
# Василий. Интернет показал другой способ решения -- через тег `embed`.
# Он отказался от изменений в файле, воспользовавшись командой:
git restore index.html
# И решил задачу вторым способом:
sed -i '/<body>/ a <embed src="kolobok_childhood.html"/>' index.html
# Браузер показал, что все нормально. Он зафиксировал файл:
git commit -a -m "Встраивание главы в основную страницу"


# В это время писательница Ольга работала над главой о встрече Колобка с Зайцем.
cd ../
git clone $KolobokRepo Olga
cd Olga
# Ольга создала ветку и переключилась на нее. Она не знала про более удобный
# способ, которым пользовался Василий -- гуру всего компьютерного.
git branch MeetingByWolf
git checkout MeetingByWolf
# Она внесла изменения в файл `meet_the_wolf.html`:
echo "
Катится Колобок, навстречу ему Волк:
— Колобок, Колобок, я тебя съем!
— Не ешь меня, Серый Волк, я тебе песенку спою:

Я Колобок, Колобок,
Я по коробу скребен,
По сусеку метен,
На сметане мешон
Да в масле пряжон,
На окошке стужон.
Я от дедушки ушел,
Я от бабушки ушел,
Я от зайца ушел,
От тебя, Волк, подавно уйду.

И покатился по дороге — только Волк его и видел!
" >> meet_the_wolf.html
# И зафиксировал изменения в истории:
git add meet_the_wolf.html
git commit -m "Колобок и Волк"
# С опозданием поняла Ольга, что нужны эмоции в тексте.
# Забыт восклицательный знак!
sed -i 's/От тебя, волк, подавно уйду./От тебя, волк, подавно уйду!/' meet_the_wolf.html
# Ничего страшного! Можно перезаписать последний коммит, если не были проведены
# другие команды -- через флаг `--amend` команды `git commit`:           
git add *_wolf.html
git commit --amend -m "Колобок и Волк"
# Для успокоения, она решила посмотреть содержимое коммита ...
git show
# ... и отправила историю в удаленный репозиторий.
git checkout master
git fetch
git merge MeetingByWolf
git push


# В это время программист Василий ...
cd ../Vasilij
# ... решил внести свои изменения в удаленную репу.
git checkout master
git merge html
git push
# Но не тут-то было! Ольга опередила его.
# Git предложил ему воспользоваться командой fetch.
# Но у Василия свой путь!
git pull --no-edit
git push


# Ольга решила упростить себе работу.
# воспользовавшись повторно текстом встречи Колобка и Волка
# для описания встречи Колобка и Зайца.
cd ../Olga
cp meet_the_wolf.html meet_the_rabbit.html
sed -i 's/Волк/Заяц/' meet_the_rabbit.html
sed -i 's/Серый/Длинноухий/' meet_the_rabbit.html
git add meet_the_rabbit.html
git commit -m "Встреча Колобка с Зайцем"
# И тут же захотела выложить в удаленный репозиторий.
git push
# Но там были изменения от Василия. Git предупредил, что нужно сливаться.
# Ольга посмотрела на граф истории своего репозитория
git log --all --graph --oneline
# Затем загрузила историю с удаленного репозитория
git fetch
# и снова посмотрела на историю.
git log --all --graph --oneline
# Так и есть! нужно сливать две ветки master - свою и удаленной репы.
git merge --no-edit
# Просмотр графа истории показал, что ветки слиты.
git log --all --graph --oneline


# Антон просматривал прогресс работы над проектом
cd ../Anton
git pull
# и обнаружил ошибку! Имя rabbit переводится с английского
# как кролик, а не заяц. Он сообщил об этом Ольге.
# Ольга решила исправить проблему - переименовать файл.
cd ../Olga
# Она заблаговременно удалила уже существующий файл meet_the_hare.html
git rm meet_the_hare.html
git mv meet_the_rabbit.html meet_the_hare.html
# Посмотрела статус перед фиксацией:
git status
# зафиксировала изменения:
git commit -m "Переименование rabbit в hate"
# и отправила изменения в удаленный репозиторий:
git push


# В команде появилось подкрепление - студент Борис.
cd ../Boris
# Ему дали наставником Ольгу
# У Оли горели планы - Колобку надо было встретиться с Медведем и Лисой.
# Если встреча с Медведем была похожа на встречи с Зайцем и Волком,
# то с Лисой была заминка.
# Борису дали тему Колобка и Медведя, а Оля взяла встречу  Колобка и Лисы.
# Борис склонировал репозиторий Ольги.
git clone ../Olga .
git rm meet_the_bear.html
cp meet_the_hare.html meet_the_bear.html
git add meet_the_bear.html
git status
# Наконец-то! Работа сделана!
git commit -m "Встреча с Медведем"
# Решил отправить работу в репозиторий.
git push
# Но не тут-то было! Историю можно отправлять только в голый репозиторий.
# А Борис склонировал c репозитория Ольги.


# Поэтому Ольга сама заберет изменения у Бориса.
cd ../Olga
# Предварительно добавив в свой репозиторий именованную ссылку на репозиторий Бориса.
git remote add Boris ../Boris
# Проверила, появилась ли ссылка?
git remote -v
# Загрузила к себе изменения Бориса:
git fetch Boris
# Слила свои изменения с изменениями Бориса:
git merge Boris/master
# Изменения Бориса попали в удаленный репозиторий через Ольгу:
git push


# Антон просматривал изменения и обнаружил, что медведь не медведь.
cd ../Anton
git pull


# Борис просто скопировал файл с зайцем и не вносил никаких изменений.
# Ему сделали замечание, и он с усердием взялся за работу:
cd ../Boris
sed -i 's/Заяц/Медведь/' meet_the_bear.html
sed -i 's/Длинноухий/Косолапый/' meet_the_bear.html
# Наученный горьким опытом, Борис посмотрел изменения:
git diff
git add meet_the_bear.html
# Снова посмотрел, но уже сравнил файл из индекса и истории:
git diff --cached
# и зафиксировал изменения:
git commit -m "Заменил Зайца на Медведя"


# Василий не сидит без дела. Он подключает следующие главы жития Колобка.
cd ../Vasilij
git pull
git checkout -b 'linkage'
# Подключает главу с Зайцем:
sed -i '/<embed src="kolobok_childhood.html"/ a <embed src="meet_the_hare.html"/>' index.html
git commit -a -m "Подключение главы 'Встреча с Зайцем'"
# Подключает главу с Волком:
sed -i '/<embed src="meet_the_hare.html"/ a <embed src="meet_the_wolf.html"/>' index.html
git commit -a -m "Подключение главы 'Встреча с Волком'"
# Подключает главу с Медведем:
sed -i '/<embed src="meet_the_wolf.html"/ a <embed src="meet_the_bear.html"/>' index.html
git commit -a -m "Подключение главы 'Встреча с Медведем'"
# Сливает измения с веткой `master`. Переключается на эту ветку:
git checkout master
# Забирает изменения из удаленного репозитория:
git pull
# Сливает свою ветку 'linkage':
git merge linkage
# Выкладывает изменения в удаленный репозиторий:
git push


# Оля забрала изменения у Бориса:
cd ../Olga
git pull Boris
# Объединила ветку Бориса со своей веткой:
git merge Boris/master
# Но вот незадача! Изменения не захотели отправиться в удаленный репозиторий:
git push origin
# Команда вернула ошибку. Кто-то уже внес изменения, и надо было с ними
# объединяться. Но кто именно это сделал - она еще не знает. Но сейчас узнает.
git fetch
git log --oneline --graph --all
# Все понятно -- это Василий.
# Сейчас объединит историю
git merge -m "Слияние с изменениями Василия"
# Отправляет снова изменения в удаленный репозиторий:
git push origin
# Все получилось!


# Антон, просматривая историю над проектом, обнаружил, что встреча Колобка с
# Лисой еще не оформлена. Он напоминает об этом Ольге и предлагает ускориться.
# Ольга создает ветку `fox` и переключается на нее:
cd ../Olga
git branch fox
git checkout fox
# Оформляет файл meet_the_fox.html:
echo "
Катится Колобок, навстречу ему Лиса:
— Колобок, Колобок, куда катишься?
— Качусь по дорожке.
— Колобок, Колобок, спой мне песенку!
Колобок и запел:

Я Колобок, Колобок,
Я по коробу скребен,
По сусеку метен,
На сметане мешон
Да в масле пряжон,
На окошке стужон.
Я от дедушки ушел,
Я от бабушки ушел,
Я от зайца ушел,
Я от волка ушел,
От медведя ушел,
От тебя, лисы, нехитро уйти!

А Лиса говорит:
— Ах, песенка хороша, да слышу я плохо. Колобок, Колобок, сядь ко мне на носок да спой еще разок, погромче.
Колобок вскочил Лисе на нос и запел погромче ту же песенку.
А Лиса опять ему:
— Колобок, Колобок, сядь ко мне на язычок да пропой в последний разок.
Колобок прыг Лисе на язык, а Лиса его — гам! — и съела.
" >> meet_the_fox.html
# Добавляет измененный файл в индекс:
git add meet_the_fox.html
# И фиксирует изменения в истории:
git commit -m "Встреча Колобка с Лисой"
# Ольга не стала просить подлкючить историю Василия. А начала действовать сама.
sed -i '/<embed src="meet_the_bear.html"/ a <embed src="meet_the_fox.html"/>' index.html
git add index.html
git commit -m "Подключение главы с Лисой"


# Антон в это время изменил заголовок проекта.
cd ../Anton
git pull
sed -i 's/Kolobok/История о Колобке/' index.html
git commit -a -m "Новый заголовок"
git push


# Ольга решила выложить свои изменения в удаленный репозиторий.
cd ../Olga
git push
# Но не получилось! Неосновную ветку (не `master`-ветку) просто так не протолкнешь.
# Она забрала изменения из удаленной ветки:
git fetch origin
# Переключилась на ветку `master`:
git checkout master
# Объединилась с веткой `master` удаленного репозитория:
git merge origin/master --no-edit
# И только потом объединила в `master` свою ветку `fox`.
git merge fox --no-edit
# И протолкнула изменения в удаленный репозиторий:
git push

# Напоследок покажем историю работы над проектом `Колобок`:
cd ../kolobok.git
git log --oneline --all --graph
```

