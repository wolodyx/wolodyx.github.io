---
layout: post
title: "СППО. Программное обеспечение и его классификация"
---

Все программное обеспечение по типу назначения разделяется на два больших класса -- системное и прикладное.

Прикладное ПО -- это самый многочисленный класс.
Примеры -- MS Office, браузер, 1С-предприятие, справочно-правовая система Гарант, словарь, калькулятор, игры, САПР.
Все их объединяет красивый и интуитивно понятный графический интерфейс. Обычно ими пользуются люди, не имеющие представления о программировании и администрировании компьютеров.
Прикладное ПО -- программа, предназначенная для выполнения определенных пользовательских задач и рассчитанная на непосредственное взаимодействие с пользователем.

Существует другой класс -- это системное ПО.
Сюда относится операционная система -- это набор программ, которые управляют рсурсами компьютера и организуют взаимодействие пользователя с ним.

Также в СПО относятся интерфейсные оболочки для взаимодействия пользователя с ОС -- это файловый менеджер (проводник, Total Commander, Far), диспетчер задач.

Инструменты для создания программ также относятся к системным. Это компилятор, линковщик, отладчик, редактор текста.

Утилита -- это вспомогательная компьютерная программа, выполняющая типовые задачи в составе ОС или оборудования.
Примерами утилит являются архиватор, дефрагментатор диска, просмотрщики.
GNU Coreutils -- это пакет программ, содержащих основные утилиты UNIX-подобные ОС.

Система управления базами данных -- это специализированная программа, предназначенная для организации и ведения базы данных.
MySQL, Oracle Database, PostgreSQL, SQLite.

Дополнительно выделяют связующее ПО (middleware) -- это программа, обеспечивающая взаимодействие между различными приложениями, системами, компонентами.
В задачу связующего ПО входят:
* взаимодействие прикладной программы с неоднородной аппаратурой;
* взаимодействие ПП с базами данных;
* взаимодействие системного и прикладного по;
* взаимодействие ОС с прикладным ПО.

Отнесение программы к системному и прикладному ПО -- это комплекс программ, предназначенное для обеспечения работы компьютера и компьютерных сетей. Такое ПО управляет ресурсами компьютера, предоставляет сервисные функции другим программам в более удобной форме, позволяет создавать и отлаживать программы.

Требования к СПО:
* прозрачность работы;
* гарантированная надежность выполнения;
* максимальная скорость выполнения;
* минимальные затраты на хранение;
* поддержка стандартных средств связи с прикладными программами. Особенность СПО -- их широкое распространение и сильная связанность с другими ПО. Изменение внешнего интерфейса иной раз невозможен. Это бы привело к ошибкам взаимодействия с ним прикладного ПО.

Основной язык программирования при разработке СПО -- это C/C++.

Вакансия системный программист. Требование -- знание ОС Linux, ...

Кросплатформенность -- способность ПО работать на двух и более ОС (аппаратных платформах).
Обычно это Windows и Linux.
Способы достижения:
* Использование кросплатформенного языка программирования (C, C++, Python, Java, Ruby).
* Использование кросплатформенных библиотек -- Qt, wxWidgets, STL, OpenGL, Boost.
* Условная компиляция. Различный код, в зависимости от ОС, компилятора.
* Поддержка сред разработки на целевых платформах.

Процесс адаптации программы или ее части на другую ОС или платформу называется портированием.
При этом стараются максимально сохранить внешний вид и поведение программы.

Если программа работает только на одной платформе, то ее называют платформозависимой.

Свободное ПО (free software) -- ПОб пользователи которого имеют право на его неограниченную установку, запуск, свободное использование, и-учение, распространение и совершенствование, распространение копий и результатов изменений.
Ключевой признак свободного ПО -- это доступ к исходным кодоам.

Закрытое или проприетарное ПО -- это ПО, являющееся частной собственностью и не удовлетворяющее критериям свободного ПО.
Правообладатель такого ПО сохраняет за собой монополию на его использование, копирование и модификацию полностью или в существенных моментах.

По умолчанию, программа считается закрытой, если не сказано обратное.

**Компонент** -- программа, рассматриваемая как единое целое, выполняющая законченную функцию и применяемая самостоятельно или в составе комплекса.

**Комплекс** -- программа, состоящая из двух или более компонентов и(или) комплексов, выполняющих взаимосвязанные функции, и применяемая самостоятельно или в составе другого комплекса.

